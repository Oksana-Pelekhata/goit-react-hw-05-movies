{"version":3,"file":"static/js/186.fd791bd3.chunk.js","mappings":"uQAAA,IAAMA,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAIjBC,EAAM,+BAECC,EAAoB,WAC/B,OAAOC,MAAM,GAADC,OAAIH,EAAG,oCAAoCL,GACtDS,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MACpB,GAEF,EAEaC,EAAkB,SAACC,GAC9B,OAAOT,MAAM,GAADC,OAAIH,EAAG,wBAAAG,OAAuBQ,GAAShB,GAClDS,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MACpB,GACF,EAEaG,EAAkB,SAACC,GAC9B,OAAOX,MAAM,GAADC,OAAIH,EAAG,WAAAG,OAAUU,GAAMlB,GAClCS,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MACpB,GACF,EAEaK,EAAkB,SAACD,GAC9B,OAAOX,MAAM,GAADC,OAAIH,EAAG,WAAAG,OAAUU,EAAE,YAAYlB,GAC1CS,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MACpB,GACF,EAEaM,EAAiB,SAACF,GAC7B,OAAOX,MAAM,GAADC,OAAIH,EAAG,WAAAG,OAAUU,EAAE,YAAYlB,GAC1CS,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MACpB,GACF,C,4ECzDaO,E,OAAMC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qD,SCO7B,EANkB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACnB,OACEC,EAAAA,EAAAA,KAACN,EAAG,CAAAK,SAAEA,GAEV,C,uFC8BA,UA/BgB,WAChB,IAAAE,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC9BI,GAAqBL,EAAAA,EAAAA,UAAS,MAArBM,GAA0BJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlB,GACTE,GAAYC,EAAAA,EAAAA,MAAZD,QAWV,OATEE,EAAAA,EAAAA,YAAU,YACNlB,EAAAA,EAAAA,IAAegB,GACV3B,MAAK,SAAAgB,GAAA,IAAGc,EAAOd,EAAPc,QAAO,OAAON,EAAeM,EAAQ,IACjDC,OAAM,SAAAC,GAAK,OAAIN,EAASM,EAAM,GAEnC,GAAG,CAACL,IAERM,QAAQC,IAAI,cAAeX,IAGvBL,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAlB,SACgB,IAAvBM,EAAYa,QACXlB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8CAEDC,EAAAA,EAAAA,KAAA,MAAAD,SACGM,EAAYc,KAAI,SAAAC,GAAE,OACjBC,EAAAA,EAAAA,MAAA,MAAAtB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAA,WAAAlB,OAAgBuC,EAAGE,WACnBtB,EAAAA,EAAAA,KAAA,KAAAD,SAAKqB,EAAGG,YAFDH,EAAG7B,GAGP,OAKnB,C","sources":["api/api.js","components/Container/Container.styled.js","components/Container/Container.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["const options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZDZmMmViODRlZmMxMzljMTk5OGU5YmRmYzZlMTU2ZiIsInN1YiI6IjY0MzhlODZmYWI2ODQ5MDBiZDAxM2E2NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MX0hLc_etjm7AgFSwCGHbxJEsYMEfLi6jQCO-l5vNZc'\n    }\n}\n\nconst url = 'https://api.themoviedb.org/3'\n\nexport const getTrendingMovies = () => {\n  return fetch(`${url}/trending/all/day?language=en-US`, options)\n  .then(response => {\n      if (!response.ok) {\n          throw new Error(response.status);\n      }\n      return response.json();\n  })\n\n}\n\nexport const getMovieByTitle = (title) => {\n  return fetch(`${url}/search/movie?query=${title}`, options)\n  .then(response => {\n      if (!response.ok) {\n          throw new Error(response.status);\n      }\n      return response.json();\n  })\n}\n\nexport const getMovieDetails = (id) => {\n  return fetch(`${url}/movie/${id}`, options)\n  .then(response => {\n      if (!response.ok) {\n          throw new Error(response.status);\n      }\n      return response.json();\n  })\n}\n\nexport const getMovieCredits = (id) => {\n  return fetch(`${url}/movie/${id}/credits`, options)\n  .then(response => {\n      if (!response.ok) {\n          throw new Error(response.status);\n      }\n      return response.json();\n  })\n}\n\nexport const getMovieReview = (id) => {\n  return fetch(`${url}/movie/${id}/reviews`, options)\n  .then(response => {\n      if (!response.ok) {\n          throw new Error(response.status);\n      }\n      return response.json();\n  })\n}","import styled from 'styled-components';\n\nexport const Div = styled.div`\nmardin-bottom: 20px;\npadding: 10px 15px;\n`","import React from 'react'\nimport {Div} from './Container.styled'\n\nconst Container = ({ children }) => {\n  return (\n    <Div>{children}</Div>\n  )\n}\n\nexport default Container","\nimport { getMovieReview } from 'api/api'\nimport Container from 'components/Container/Container'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst Reviews = () => {\nconst [movieReview, setMovieReview] = useState(null)\n    const [, setError] = useState(null)\n    const { movieId } = useParams()\n\n    useEffect(() => {\n        getMovieReview(movieId)\n            .then(({ results }) => setMovieReview(results))\n        .catch(error => setError(error))\n        \n    }, [movieId])\n  \nconsole.log('movieReview', movieReview)\n\n  return (\n    <Container>\n      {movieReview.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>)\n        : (\n          <ul>\n            {movieReview.map(el => \n              <li key={el.id}>\n                <h3>{`Author: ${el.author}`}</h3>\n                <p>{ el.content}</p>\n              </li>)}\n          </ul>\n      ) }\n    </Container>\n  )\n}\n\nexport default Reviews\n\n//We don't have any reviews for this movie"],"names":["options","method","headers","accept","Authorization","url","getTrendingMovies","fetch","concat","then","response","ok","Error","status","json","getMovieByTitle","title","getMovieDetails","id","getMovieCredits","getMovieReview","Div","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","_useState","useState","_useState2","_slicedToArray","movieReview","setMovieReview","_useState3","setError","movieId","useParams","useEffect","results","catch","error","console","log","Container","length","map","el","_jsxs","author","content"],"sourceRoot":""}