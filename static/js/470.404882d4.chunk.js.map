{"version":3,"file":"static/js/470.404882d4.chunk.js","mappings":"4LAEaA,E,OAAMC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qD,SCO7B,EANkB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACnB,OACEC,EAAAA,EAAAA,KAACN,EAAG,CAAAK,SAAEA,GAEV,C,2DCUA,IAdmB,SAAHD,GAAoB,IAAdG,EAAMH,EAANG,OACRC,GAAWC,EAAAA,EAAAA,MACvB,OACcH,EAAAA,EAAAA,KAAA,MAAAD,SACLE,GACGA,EAAOG,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAE,OACbP,EAAAA,EAAAA,KAAA,MAAAD,UACIS,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,GAAMK,MAAO,CAAEC,KAAMX,GAAWH,SAAA,CAAEO,EAAM,QADxDC,EAEJ,KAI7B,C,yFCfMO,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAmBvB,EAfwB,SAACZ,GAEvB,OAAOa,MAAM,qDAADR,OACoCL,EAAK,MACpDQ,GACAM,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAG7B,OAAOH,EAASI,MACpB,GAEF,E,4CCyCA,EAtDe,WAAO,IAADC,EACjBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC1B,EAAM4B,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1BE,GAAFD,EAAA,GAAUA,EAAA,IACtBE,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAiC,QAA5Bd,EAAGY,EAAaG,IAAI,gBAAQ,IAAAf,EAAAA,EAAI,GAGrCgB,EAAY,SAACF,GAEfG,EAAgBH,GACPpB,MAAK,SAAAtB,GAAUA,EAAP8C,QACDxC,KAAI,SAAAyC,GAAM,OACdd,GAAU,SAAC9B,GAAM,SAAAU,QAAAmC,EAAAA,EAAAA,GAAS7C,GAAM,CAAE,CAC9BK,MAAOuC,EAAOvC,OAASuC,EAAOE,KAC9BxC,GAAIsC,EAAOtC,KACf,GAAE,GAEV,IACHyC,OAAM,SAAAC,GAAK,OAAIf,EAASe,EAAM,GACnC,EAsBA,OANAC,EAAAA,EAAAA,YAAU,WACNR,EAAUF,EAEd,GAAG,KAGMhC,EAAAA,EAAAA,MAAC2C,EAAAA,EAAS,CAAApD,SAAA,EACfS,EAAAA,EAAAA,MAAA,QAAM4C,SAjBW,SAACC,GAGjB,GAFDA,EAAEC,iBACFvB,EAAU,IACK,KAAVS,EACD,OAAOe,MAAM,sCAEjBb,EAAUF,EAEd,EASiCzC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOwD,KAAK,OAAOT,KAAK,SACpBU,SAvBS,SAAHpD,GAA4B,IAAbqD,EAAKrD,EAAdsD,OAASD,MAC7BnB,EAAgB,CAACC,MAAOkB,GAC5B,EAsBYA,MAAOlB,KAEXxC,EAAAA,EAAAA,KAAA,UAAQwD,KAAK,SAAQzD,SAAC,eAE1BC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAAC3D,OAAQA,MAG5B,C","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Movieslist/MoviesList.jsx","api/getMovieByTitle.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\nmardin-bottom: 20px;\npadding: 10px 15px;\n`","import React from 'react'\nimport {Div} from './Container.styled'\n\nconst Container = ({ children }) => {\n  return (\n    <Div>{children}</Div>\n  )\n}\n\nexport default Container","import React from 'react'\nimport { Link, useLocation } from \"react-router-dom\"\n\nconst MoviesList = ({ movies }) => {\n        const location = useLocation();\n  return (\n                <ul>\n          {movies&&\n              movies.map(({ title, id }) =>\n                        <li key={id} >\n                            <Link to={`/movies/${id}`} state={{ from: location }}>{title} </Link>\n                        </li>\n                    )}\n                </ul>\n  )\n}\n\nexport default MoviesList","const options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZDZmMmViODRlZmMxMzljMTk5OGU5YmRmYzZlMTU2ZiIsInN1YiI6IjY0MzhlODZmYWI2ODQ5MDBiZDAxM2E2NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MX0hLc_etjm7AgFSwCGHbxJEsYMEfLi6jQCO-l5vNZc'\n    }\n}\n\nconst getMovieByTitle = (title) => {\n\n  return fetch(`\nhttps://api.themoviedb.org/3/search/movie?query=${title}\n`, options)\n  .then(response => {\n      if (!response.ok) {\n          throw new Error(response.status);\n      }\n\n      return response.json();\n  })\n\n}\n\nexport default getMovieByTitle","/* eslint-disable no-unused-vars */\nimport getMovieByTitle from \"api/getMovieByTitle\"\nimport { useEffect, useState } from \"react\"\n// import { Link } from 'react-router-dom';\nimport MoviesList from '../components/Movieslist/MoviesList'\nimport Container from \"components/Container/Container\"\nimport { useSearchParams } from \"react-router-dom\"\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [error, setError] = useState(null)\n    const [searchParams, setSearchParams] = useSearchParams()\n    const query = searchParams.get('query') ?? '';\n\n\n    const getMovies = (query) => {\n       \n        getMovieByTitle(query)\n                .then(({ results }) => {\n                results.map(result => \n                    setMovies((movies) => [...movies, {\n                        title: result.title || result.name,\n                        id: result.id\n                   }])\n                )\n            })\n        .catch(error => setError(error))\n    }\n\n    const handleChange = ({ target: {value}}) => {\n        setSearchParams({query: value})\n    }\n\n    const handleSearch = (e) => {\n        e.preventDefault()\n        setMovies([])\n         if (query === '') {\n            return alert(\"Please, enter your search request \")\n        }\n        getMovies(query)\n        // setSearchParams({query: ''})\n    }\n\n    useEffect(() => {\n        getMovies(query)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    return ( <Container>\n        <form onSubmit={handleSearch}>\n            <input type=\"text\" name=\"search\"\n                onChange={handleChange}\n                value={query}\n            />\n            <button type=\"submit\">Search</button>\n        </form>\n        <MoviesList movies={movies} />\n        </Container>\n)\n}\n\nexport default Movies"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","movies","location","useLocation","map","_ref2","title","id","_jsxs","Link","to","concat","state","from","options","method","headers","accept","Authorization","fetch","then","response","ok","Error","status","json","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","getMovies","getMovieByTitle","results","result","_toConsumableArray","name","catch","error","useEffect","Container","onSubmit","e","preventDefault","alert","type","onChange","value","target","MoviesList"],"sourceRoot":""}