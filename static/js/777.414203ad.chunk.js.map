{"version":3,"file":"static/js/777.414203ad.chunk.js","mappings":"kMAAMA,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAmBvB,EAfwB,SAACC,GAEvB,OAAOC,MAAM,wCAADC,OACuBF,EAAE,cACpCL,GACAQ,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAG7B,OAAOH,EAASI,MACpB,GAEF,E,2BCnBaC,E,OAAOC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6B,SCmC7B,EAhCa,WACT,IAAAC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAEpCI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1BE,GAAFD,EAAA,GAAUA,EAAA,IACdE,GAAYC,EAAAA,EAAAA,MAAZD,QAUV,OATEE,QAAQC,IAAI,UAAWH,IAEvBI,EAAAA,EAAAA,YAAU,WACNC,EAAgBL,GACXnB,MAAK,SAAAyB,GAAA,IAAGC,EAAID,EAAJC,KAAI,OAAOX,EAAgBW,EAAK,IAC5CC,OAAM,SAAAC,GAAK,OAAIV,EAASU,EAAM,GAEnC,GAAG,CAACT,KAGFU,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACvB,EAAI,CAAAwB,SAEGhB,GACAA,EAAaiB,KAAI,SAACC,GAAE,OAChBC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACID,EAAAA,EAAAA,KAAA,OAAKK,IAAG,mCAAAnC,OAAqCiC,EAAGG,cAAgBC,MAAM,QAAQC,IAAKL,EAAGM,iBACtFT,EAAAA,EAAAA,KAAA,KAAAC,SAAKE,EAAGM,iBACNT,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAGO,cAHJP,EAAGQ,UAIP,OAM3B,C","sources":["api/getMovieCredits.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["const options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZDZmMmViODRlZmMxMzljMTk5OGU5YmRmYzZlMTU2ZiIsInN1YiI6IjY0MzhlODZmYWI2ODQ5MDBiZDAxM2E2NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MX0hLc_etjm7AgFSwCGHbxJEsYMEfLi6jQCO-l5vNZc'\n    }\n}\n\nconst getMovieCredits = (id) => {\n\n  return fetch(`\nhttps://api.themoviedb.org/3/movie/${id}/credits\n`, options)\n  .then(response => {\n      if (!response.ok) {\n          throw new Error(response.status);\n      }\n\n      return response.json();\n  })\n\n}\n\nexport default getMovieCredits","import styled from 'styled-components';\n\nexport const List = styled.ul`\nlist-style: none;\n`","import getMovieCredits from 'api/getMovieCredits'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { List } from './Cast.styled'\n\nconst Cast = () => {\n    const [movieCredits, setMovieCredits] = useState([])\n    // eslint-disable-next-line no-unused-vars\n    const [error, setError] = useState(null)\n    const { movieId } = useParams()\n    console.log('movieId', movieId)\n\n    useEffect(() => {\n        getMovieCredits(movieId)\n            .then(({ cast }) => setMovieCredits(cast))\n        .catch(error => setError(error))\n        \n    }, [movieId])\n\n  return (\n      <div>\n          <List>\n              {\n                  movieCredits &&\n                  movieCredits.map((el) => \n                      <li key={el.credit_id}>\n                          <img src={`https://image.tmdb.org/t/p/w500/${el.profile_path}`} width='200px' alt={el.original_name} />\n                          <p>{ el.original_name}</p>\n                            <p>{el.character}</p>\n                      </li>\n                  )\n              }\n          </List>\n    </div>\n  )\n}\n\nexport default Cast"],"names":["options","method","headers","accept","Authorization","id","fetch","concat","then","response","ok","Error","status","json","List","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","movieCredits","setMovieCredits","_useState3","_useState4","setError","movieId","useParams","console","log","useEffect","getMovieCredits","_ref","cast","catch","error","_jsx","children","map","el","_jsxs","src","profile_path","width","alt","original_name","character","credit_id"],"sourceRoot":""}